generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  emailVerified Boolean @default(false)
  emailVerificationToken String?
  emailVerificationExpires DateTime?
  resetPasswordToken String?
  resetPasswordExpires DateTime?
  role      String   @default("user")
  createdAt DateTime @default(now())

  // Relaciones
  perfil     Perfil?
  dilemas    Dilema[]
  patrones   Patron[]
  pensamientos Pensamiento[]
  // espejos    Espejo[]
  // actividades Actividad[]
  // aiLogs     AiLog[]
  // userTags   UserTag[]
}

model Perfil {
  id                     Int      @id @default(autoincrement())
  user                  User     @relation(fields: [userId], references: [id])
  userId                Int      @unique
  bienestar             Int
  autoconocimiento      Int
  gestionEmocional      Int
  dilemasTotales        Int      @default(0)
  creenciasTransformadas Int     @default(0)
  diasActivo            Int      @default(0)
  progresoEmocional     Int      @default(0)
  updatedAt             DateTime @updatedAt
}



model Dilema {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  titulo    String
  contenido String
  createdAt DateTime  @default(now())

  respuestas Respuesta[]
  emociones  Emocion[]
  raices     Raiz[]
  // creencias  Creencia[]
  // tags       DilemaTag[]
}



// RESPUESTAS

enum MentorTipo {
  psicologo
  filosofo
  amigo
}

model Respuesta {
  id          Int       @id @default(autoincrement())
  dilema      Dilema    @relation(fields: [dilemaId], references: [id])
  dilemaId    Int
  mentorTipo  MentorTipo
  contenido   String
  createdAt   DateTime @default(now())
}

// PENSAMIENTOS

enum TipoPensamiento {
  // Creencias y juicios
  creencia
  juicio
  etiqueta
  suposicion
  interpretacion
  generalizacion
  profecia

  // Motivaciones e impulsos
  impulso
  necesidad
  deseo
  intencion
  objetivo
  meta
  proposito

  // Valores y moral
  valor
  norma
  ideal
  mandato

  // Pensamiento racional y narrativo
  razonamiento
  justificacion
  explicacion
  historia_personal
  recuerdo
  experiencia_pasada
  comparacion

  // Distorsiones o patrones negativos
  catastrofe
  autoexigencia
  victimismo
  desesperanza
  rumiacion
  obsesion
  negacion
}

model Pensamiento {
  id        Int              @id @default(autoincrement())
  user      User             @relation(fields: [userId], references: [id])
  userId    Int
  padre     Pensamiento?     @relation("PadreHijo", fields: [padreId], references: [id])
  padreId   Int?
  hijos     Pensamiento[]    @relation("PadreHijo")
  contenido String
  tipo      TipoPensamiento
  createdAt DateTime         @default(now())
}


// EMOCION

enum TipoEmocion {
  miedo
  culpa
  tristeza
  verguenza
  frustracion
  ira
  ansiedad
  alegria
  esperanza
  sorpresa
  alivio
  resignacion
  euforia
  nostalgia
  celos
  rechazo
  aburrimiento
  inseguridad
  gratitud
  afecto
}

model Emocion {
  id         Int      @id @default(autoincrement())
  dilema     Dilema   @relation(fields: [dilemaId], references: [id])
  dilemaId   Int
  tipo       TipoEmocion   // 'culpa', 'miedo', 'ansiedad', etc. (puedes usar enum si lo prefieres)
  intensidad Int      @default(50) // Rango 0-100
  createdAt  DateTime @default(now())
}

// RAIZ

enum TipoRaiz {
  infancia
  miedo_al_rechazo
  baja_autoestima
  trauma_pasado
  condicionamiento_social
  exigencia_parental
  comparacion_constante
  necesidad_de_control
  perfeccionismo
  dependencia_emocional
  inseguridad
  soledad
  abandono
  idealizacion
  culpa_inconsciente
  fracaso_no_resuelto
  carencia_afectiva
  miedo_al_conflicto
  rechazo_anterior
  juicio_social
}


model Raiz {
  id         Int      @id @default(autoincrement())
  dilema     Dilema   @relation(fields: [dilemaId], references: [id])
  dilemaId   Int
  origen     TipoRaiz
  certeza    Int      @default(50) // Valor del 0 al 100
  createdAt  DateTime @default(now())
}


// PATRON

model Patron {
  id               Int      @id @default(autoincrement())
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
  tipo             TipoPatron
  frecuencia       Int      @default(1)
  ultimaDetectada  DateTime @default(now())
}

enum TipoPatron {
  autoexigencia
  catastrofismo
  perfeccionismo
  pensamiento_dicotomico
  lectura_de_mente
  sobregeneralizacion
  filtro_negativo
  culpabilizacion
  deberias
  personalizacion
  rumiacion
  desesperanza
  evitacion
  validacion_externa
  indecision_cronica
  negacion
  juicio_permanente
  comparacion_toxica
  autosabotaje
  hiperresponsabilidad
}
